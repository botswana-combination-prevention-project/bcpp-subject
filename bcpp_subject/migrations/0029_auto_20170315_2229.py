# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-15 20:29
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import edc_base.model_validators.date
import edc_base.model_validators.eligibility
import edc_base.utils
import edc_consent.validators
import edc_protocol.validators


class Migration(migrations.Migration):

    dependencies = [
        ('bcpp_subject', '0028_auto_20170305_1756'),
    ]

    operations = [
        migrations.RenameField(
            model_name='historicalpimacd4',
            old_name='pima_today_other_other',
            new_name='reason_not_done_other',
        ),
        migrations.RenameField(
            model_name='historicalpimavl',
            old_name='poc_today_vl_other_other',
            new_name='reason_not_done_other',
        ),
        migrations.RenameField(
            model_name='pimacd4',
            old_name='pima_today_other_other',
            new_name='reason_not_done_other',
        ),
        migrations.RenameField(
            model_name='pimavl',
            old_name='poc_today_vl_other_other',
            new_name='reason_not_done_other',
        ),
        migrations.RemoveField(
            model_name='historicalpimacd4',
            name='cd4_datetime',
        ),
        migrations.RemoveField(
            model_name='historicalpimacd4',
            name='cd4_value',
        ),
        migrations.RemoveField(
            model_name='historicalpimacd4',
            name='pima_id',
        ),
        migrations.RemoveField(
            model_name='historicalpimacd4',
            name='pima_today',
        ),
        migrations.RemoveField(
            model_name='historicalpimacd4',
            name='pima_today_other',
        ),
        migrations.RemoveField(
            model_name='historicalpimavl',
            name='pima_id',
        ),
        migrations.RemoveField(
            model_name='historicalpimavl',
            name='poc_vl_today',
        ),
        migrations.RemoveField(
            model_name='historicalpimavl',
            name='poc_vl_today_other',
        ),
        migrations.RemoveField(
            model_name='historicalpimavl',
            name='poc_vl_type',
        ),
        migrations.RemoveField(
            model_name='historicalpimavl',
            name='poc_vl_value',
        ),
        migrations.RemoveField(
            model_name='historicalpimavl',
            name='time_of_result',
        ),
        migrations.RemoveField(
            model_name='historicalpimavl',
            name='time_of_test',
        ),
        migrations.RemoveField(
            model_name='historicalpimavl',
            name='vl_value_quatifier',
        ),
        migrations.RemoveField(
            model_name='pimacd4',
            name='cd4_datetime',
        ),
        migrations.RemoveField(
            model_name='pimacd4',
            name='cd4_value',
        ),
        migrations.RemoveField(
            model_name='pimacd4',
            name='pima_id',
        ),
        migrations.RemoveField(
            model_name='pimacd4',
            name='pima_today',
        ),
        migrations.RemoveField(
            model_name='pimacd4',
            name='pima_today_other',
        ),
        migrations.RemoveField(
            model_name='pimavl',
            name='pima_id',
        ),
        migrations.RemoveField(
            model_name='pimavl',
            name='poc_vl_today',
        ),
        migrations.RemoveField(
            model_name='pimavl',
            name='poc_vl_today_other',
        ),
        migrations.RemoveField(
            model_name='pimavl',
            name='poc_vl_type',
        ),
        migrations.RemoveField(
            model_name='pimavl',
            name='poc_vl_value',
        ),
        migrations.RemoveField(
            model_name='pimavl',
            name='time_of_result',
        ),
        migrations.RemoveField(
            model_name='pimavl',
            name='time_of_test',
        ),
        migrations.RemoveField(
            model_name='pimavl',
            name='vl_value_quatifier',
        ),
        migrations.AddField(
            model_name='historicalpimacd4',
            name='machine_identifier',
            field=models.CharField(blank=True, help_text='type this id directly from the machine as labeled', max_length=9, null=True, validators=[django.core.validators.RegexValidator(message='Machine ID must be a two digit number.', regex='\\d+')]),
        ),
        migrations.AddField(
            model_name='historicalpimacd4',
            name='reason_not_done',
            field=models.CharField(blank=True, choices=[('Participant Declined', 'Participant Declined'), ('Multiple PIMA malfunction', 'Multiple PIMA malfunction'), ('Failed Blood Collection', 'Failed Blood Collection'), ('OTHER', 'Other, specify:')], max_length=50, null=True, verbose_name='If test not done, please explain why'),
        ),
        migrations.AddField(
            model_name='historicalpimacd4',
            name='result_datetime',
            field=models.DateTimeField(blank=True, null=True, validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Result Date and time'),
        ),
        migrations.AddField(
            model_name='historicalpimacd4',
            name='result_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='historicalpimacd4',
            name='test_done',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=3, verbose_name='Was the test done today?'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicalpimavl',
            name='location',
            field=models.CharField(choices=[('mobile setting', 'Mobile Setting'), ('household setting', 'Household Setting'), ('N/A', 'Not applicable')], default='mobile setting', max_length=25, verbose_name='Where was this test done'),
        ),
        migrations.AddField(
            model_name='historicalpimavl',
            name='machine_identifier',
            field=models.CharField(blank=True, help_text='type this id directly from the machine as labeled', max_length=9, null=True, validators=[django.core.validators.RegexValidator(message='Machine ID must be a two digit number.', regex='\\d+')]),
        ),
        migrations.AddField(
            model_name='historicalpimavl',
            name='quantifier',
            field=models.CharField(blank=True, choices=[('greater_than', 'Greater Than'), ('equal_to', 'Equal To'), ('less_than', 'Less Than'), ('OTHER', 'Other, specify:')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='historicalpimavl',
            name='reason_not_done',
            field=models.CharField(blank=True, choices=[('Participant Declined', 'Participant Declined'), ('Multiple PIMA malfunction', 'Multiple PIMA malfunction'), ('Failed Blood Collection', 'Failed Blood Collection'), ('OTHER', 'Other, specify:')], max_length=50, null=True, verbose_name='If test not done, please explain why'),
        ),
        migrations.AddField(
            model_name='historicalpimavl',
            name='result_datetime',
            field=models.DateTimeField(blank=True, null=True, validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Result Date and time'),
        ),
        migrations.AddField(
            model_name='historicalpimavl',
            name='result_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='historicalpimavl',
            name='test_datetime',
            field=models.DateTimeField(blank=True, null=True, validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Test started at'),
        ),
        migrations.AddField(
            model_name='historicalpimavl',
            name='test_done',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=3, verbose_name='Was the test done today?'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='pimacd4',
            name='machine_identifier',
            field=models.CharField(blank=True, help_text='type this id directly from the machine as labeled', max_length=9, null=True, validators=[django.core.validators.RegexValidator(message='Machine ID must be a two digit number.', regex='\\d+')]),
        ),
        migrations.AddField(
            model_name='pimacd4',
            name='reason_not_done',
            field=models.CharField(blank=True, choices=[('Participant Declined', 'Participant Declined'), ('Multiple PIMA malfunction', 'Multiple PIMA malfunction'), ('Failed Blood Collection', 'Failed Blood Collection'), ('OTHER', 'Other, specify:')], max_length=50, null=True, verbose_name='If test not done, please explain why'),
        ),
        migrations.AddField(
            model_name='pimacd4',
            name='result_datetime',
            field=models.DateTimeField(blank=True, null=True, validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Result Date and time'),
        ),
        migrations.AddField(
            model_name='pimacd4',
            name='result_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='pimacd4',
            name='test_done',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=3, verbose_name='Was the test done today?'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='pimavl',
            name='location',
            field=models.CharField(choices=[('mobile setting', 'Mobile Setting'), ('household setting', 'Household Setting'), ('N/A', 'Not applicable')], default='mobile setting', max_length=25, verbose_name='Where was this test done'),
        ),
        migrations.AddField(
            model_name='pimavl',
            name='machine_identifier',
            field=models.CharField(blank=True, help_text='type this id directly from the machine as labeled', max_length=9, null=True, validators=[django.core.validators.RegexValidator(message='Machine ID must be a two digit number.', regex='\\d+')]),
        ),
        migrations.AddField(
            model_name='pimavl',
            name='quantifier',
            field=models.CharField(blank=True, choices=[('greater_than', 'Greater Than'), ('equal_to', 'Equal To'), ('less_than', 'Less Than'), ('OTHER', 'Other, specify:')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='pimavl',
            name='reason_not_done',
            field=models.CharField(blank=True, choices=[('Participant Declined', 'Participant Declined'), ('Multiple PIMA malfunction', 'Multiple PIMA malfunction'), ('Failed Blood Collection', 'Failed Blood Collection'), ('OTHER', 'Other, specify:')], max_length=50, null=True, verbose_name='If test not done, please explain why'),
        ),
        migrations.AddField(
            model_name='pimavl',
            name='result_datetime',
            field=models.DateTimeField(blank=True, null=True, validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Result Date and time'),
        ),
        migrations.AddField(
            model_name='pimavl',
            name='result_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='pimavl',
            name='test_datetime',
            field=models.DateTimeField(blank=True, null=True, validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Test started at'),
        ),
        migrations.AddField(
            model_name='pimavl',
            name='test_done',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=3, verbose_name='Was the test done today?'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='accesstocare',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='anonymousconsent',
            name='subject_identifier_as_pk',
            field=models.CharField(default=edc_base.utils.get_uuid, editable=False, max_length=32, verbose_name='Subject Identifier as pk'),
        ),
        migrations.AlterField(
            model_name='anonymousconsent',
            name='version',
            field=models.CharField(editable=False, help_text="See 'Consent Type' for consent versions by period.", max_length=10, verbose_name='Consent version'),
        ),
        migrations.AlterField(
            model_name='cancer',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='cd4history',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='ceaenrollmentchecklist',
            name='community_resident',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], help_text="if 'NO (or don't want to answer)' STOP participant cannot be enrolled.", max_length=17, validators=[edc_base.model_validators.eligibility.eligible_if_yes], verbose_name='[Participant] In the past 12 months, have you typically spent 3 or more nights per month in [name of study community]? [If moved into the community in the past 12 months, then since moving in have you typically spent more than 3 nights per month in this community] '),
        ),
        migrations.AlterField(
            model_name='circumcised',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='circumcision',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='clinicquestionnaire',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='communityengagement',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='demographics',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='education',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='elisahivresult',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='grant',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='heartattack',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hicenrollment',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalaccesstocare',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalanonymousconsent',
            name='subject_identifier_as_pk',
            field=models.CharField(default=edc_base.utils.get_uuid, editable=False, max_length=32, verbose_name='Subject Identifier as pk'),
        ),
        migrations.AlterField(
            model_name='historicalanonymousconsent',
            name='version',
            field=models.CharField(editable=False, help_text="See 'Consent Type' for consent versions by period.", max_length=10, verbose_name='Consent version'),
        ),
        migrations.AlterField(
            model_name='historicalcancer',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalcd4history',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalceaenrollmentchecklist',
            name='community_resident',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], help_text="if 'NO (or don't want to answer)' STOP participant cannot be enrolled.", max_length=17, validators=[edc_base.model_validators.eligibility.eligible_if_yes], verbose_name='[Participant] In the past 12 months, have you typically spent 3 or more nights per month in [name of study community]? [If moved into the community in the past 12 months, then since moving in have you typically spent more than 3 nights per month in this community] '),
        ),
        migrations.AlterField(
            model_name='historicalcircumcised',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalcircumcision',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalclinicquestionnaire',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalcommunityengagement',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicaldemographics',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicaleducation',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalelisahivresult',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalgrant',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalheartattack',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhicenrollment',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivcareadherence',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivhealthcarecosts',
            name='hiv_medical_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='Have you ever received HIV related medical/clinical care? '),
        ),
        migrations.AlterField(
            model_name='historicalhivhealthcarecosts',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivlinkagetocare',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivmedicalcare',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivrelatedillness',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivresult',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivresultdocumentation',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivtested',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivtestinghistory',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivtestreview',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhivuntested',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhospitaladmission',
            name='hospitalization_costs',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], help_text=' ', max_length=17, null=True, verbose_name='For this most recent hospitalization, were any of these costs by covered by anyone else, such as your medical aid or employer? '),
        ),
        migrations.AlterField(
            model_name='historicalhospitaladmission',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalhouseholdcomposition',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicallabourmarketwages',
            name='govt_grant',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='Do you receive any government grant for yourself or on behalf of someone else? '),
        ),
        migrations.AlterField(
            model_name='historicallabourmarketwages',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicallabourmarketwages',
            name='weeks_out',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 12 months, have you spent more than 2 weeks away? '),
        ),
        migrations.AlterField(
            model_name='historicalmedicaldiagnoses',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalnonpregnancy',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicaloutpatientcare',
            name='cost_cover',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, null=True, verbose_name='For this most recent outpatient medical care visit, were any of these costs by covered by anyone else, such as your medical aid or employer? '),
        ),
        migrations.AlterField(
            model_name='historicaloutpatientcare',
            name='dept_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, did you seek care at a Hospital Outpatient Department, including Govt, private and church/mission hospitals? Not including any visits for which you were hospitalized. '),
        ),
        migrations.AlterField(
            model_name='historicaloutpatientcare',
            name='govt_health_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, did you seek care at a Government Primary Health Clinic/Post? Not including any visits for which you were hospitalized. '),
        ),
        migrations.AlterField(
            model_name='historicaloutpatientcare',
            name='prvt_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, did you seek care from a Private Doctor? '),
        ),
        migrations.AlterField(
            model_name='historicaloutpatientcare',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicaloutpatientcare',
            name='trad_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, did you seek care from a Traditional or Faith Healer? '),
        ),
        migrations.AlterField(
            model_name='historicalparticipation',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalpimacd4',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalpimavl',
            name='easy_of_use',
            field=models.CharField(blank=True, choices=[('easy', 'Easy'), ('Very easy', 'Very Easy'), ('Fairly easy', 'Fairly easy'), ('Difficult', 'Difficult'), ('Very difficult', 'Very difficult')], max_length=25, null=True, verbose_name='Ease of use by field operator?'),
        ),
        migrations.AlterField(
            model_name='historicalpimavl',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalpimavl',
            name='stability',
            field=models.TextField(blank=True, help_text='Comment', max_length=250, null=True, verbose_name='Stability'),
        ),
        migrations.AlterField(
            model_name='historicalpositiveparticipant',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalpregnancy',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalqualityoflife',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalrecentpartner',
            name='first_exchange',
            field=models.CharField(choices=[('less or equal to 18 years old', 'less or equal to 18 years old'), ('19-29', '19-29 years old'), ('30-39', '30-39 years old'), ('40-49', '40-49 years old'), ('50-59', '50-59 years old'), ('60 or older', '60 year or older'), ('not_sure', 'Not sure'), ('DWTA', "Don't want to answer")], help_text='Note: If participant does not want to answer, leave blank.', max_length=40, null=True, verbose_name='To the best of your knowledge, how old is this person?'),
        ),
        migrations.AlterField(
            model_name='historicalrecentpartner',
            name='first_relationship',
            field=models.CharField(choices=[('Long-term partner', 'Long-term partner (>2 years) or spouse'), ('2 years or spouse', '2 years or spouse'), ('Boyfriend/Girlfriend', 'Boyfriend/Girlfriend'), ('Casual (known) partner', 'Casual (known) partner'), ('One time partner (previously unknown)', 'One time partner (previously unknown)'), ('Commercial sex worker', 'Commercial sex worker'), ('OTHER', 'Other, specify:'), ('DWTA', "Don't want to answer")], max_length=40, verbose_name='What type of relationship do you have with this person?'),
        ),
        migrations.AlterField(
            model_name='historicalrecentpartner',
            name='partner_hiv_test',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_sure', 'Not Sure'), ('DWTA', "Don't want to answer")], max_length=25, verbose_name='Has your partner been tested for HIV in last 12 months'),
        ),
        migrations.AlterField(
            model_name='historicalrecentpartner',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalreproductivehealth',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalresidencymobility',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalresourceutilization',
            name='medical_cover',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, null=True, verbose_name='Were any of these costs for medicines or special foods covered by anyone else, such as your medical aid or employer? '),
        ),
        migrations.AlterField(
            model_name='historicalresourceutilization',
            name='out_patient',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, have you sought outpatient medical care for yourself? Not including any visits for which you were hospitalized. '),
        ),
        migrations.AlterField(
            model_name='historicalresourceutilization',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalrespondent',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalsecondpartner',
            name='first_exchange',
            field=models.CharField(choices=[('less or equal to 18 years old', 'less or equal to 18 years old'), ('19-29', '19-29 years old'), ('30-39', '30-39 years old'), ('40-49', '40-49 years old'), ('50-59', '50-59 years old'), ('60 or older', '60 year or older'), ('not_sure', 'Not sure'), ('DWTA', "Don't want to answer")], help_text='Note: If participant does not want to answer, leave blank.', max_length=40, null=True, verbose_name='To the best of your knowledge, how old is this person?'),
        ),
        migrations.AlterField(
            model_name='historicalsecondpartner',
            name='first_relationship',
            field=models.CharField(choices=[('Long-term partner', 'Long-term partner (>2 years) or spouse'), ('2 years or spouse', '2 years or spouse'), ('Boyfriend/Girlfriend', 'Boyfriend/Girlfriend'), ('Casual (known) partner', 'Casual (known) partner'), ('One time partner (previously unknown)', 'One time partner (previously unknown)'), ('Commercial sex worker', 'Commercial sex worker'), ('OTHER', 'Other, specify:'), ('DWTA', "Don't want to answer")], max_length=40, verbose_name='What type of relationship do you have with this person?'),
        ),
        migrations.AlterField(
            model_name='historicalsecondpartner',
            name='partner_hiv_test',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_sure', 'Not Sure'), ('DWTA', "Don't want to answer")], max_length=25, verbose_name='Has your partner been tested for HIV in last 12 months'),
        ),
        migrations.AlterField(
            model_name='historicalsecondpartner',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalsexualbehaviour',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalstigma',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalstigmaopinion',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectconsent',
            name='is_incarcerated',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="( if 'Yes' STOP patient cannot be consented )", max_length=3, null=True, validators=[edc_consent.validators.eligible_if_no], verbose_name='Is the participant under involuntary incarceration?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectconsent',
            name='is_minor',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], editable=False, help_text='Subject is a minor if aged 16-17. A guardian must be present for consent. HIV status may NOT be revealed in the household.', max_length=10, null=True, verbose_name='Is subject a minor?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectconsent',
            name='language',
            field=models.CharField(choices=[('tn', 'Setswana'), ('en', 'English'), ('kck', 'Ikalanga'), ('hbs', 'Hambukushu')], help_text='The language used for the edc_consent process will also be used during data collection.', max_length=25, verbose_name='Language of consent'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectconsent',
            name='subject_identifier_as_pk',
            field=models.CharField(default=edc_base.utils.get_uuid, editable=False, max_length=32, verbose_name='Subject Identifier as pk'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectconsent',
            name='version',
            field=models.CharField(editable=False, help_text="See 'Consent Type' for consent versions by period.", max_length=10, verbose_name='Consent version'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectreferral',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalsubstanceuse',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicaltbsymptoms',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalthirdpartner',
            name='first_exchange',
            field=models.CharField(choices=[('less or equal to 18 years old', 'less or equal to 18 years old'), ('19-29', '19-29 years old'), ('30-39', '30-39 years old'), ('40-49', '40-49 years old'), ('50-59', '50-59 years old'), ('60 or older', '60 year or older'), ('not_sure', 'Not sure'), ('DWTA', "Don't want to answer")], help_text='Note: If participant does not want to answer, leave blank.', max_length=40, null=True, verbose_name='To the best of your knowledge, how old is this person?'),
        ),
        migrations.AlterField(
            model_name='historicalthirdpartner',
            name='first_relationship',
            field=models.CharField(choices=[('Long-term partner', 'Long-term partner (>2 years) or spouse'), ('2 years or spouse', '2 years or spouse'), ('Boyfriend/Girlfriend', 'Boyfriend/Girlfriend'), ('Casual (known) partner', 'Casual (known) partner'), ('One time partner (previously unknown)', 'One time partner (previously unknown)'), ('Commercial sex worker', 'Commercial sex worker'), ('OTHER', 'Other, specify:'), ('DWTA', "Don't want to answer")], max_length=40, verbose_name='What type of relationship do you have with this person?'),
        ),
        migrations.AlterField(
            model_name='historicalthirdpartner',
            name='partner_hiv_test',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_sure', 'Not Sure'), ('DWTA', "Don't want to answer")], max_length=25, verbose_name='Has your partner been tested for HIV in last 12 months'),
        ),
        migrations.AlterField(
            model_name='historicalthirdpartner',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicaltuberculosis',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicaluncircumcised',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='historicalviralloadresult',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivcareadherence',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivhealthcarecosts',
            name='hiv_medical_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='Have you ever received HIV related medical/clinical care? '),
        ),
        migrations.AlterField(
            model_name='hivhealthcarecosts',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivlinkagetocare',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivmedicalcare',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivrelatedillness',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivresult',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivresultdocumentation',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivtested',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivtestinghistory',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivtestreview',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hivuntested',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hospitaladmission',
            name='hospitalization_costs',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], help_text=' ', max_length=17, null=True, verbose_name='For this most recent hospitalization, were any of these costs by covered by anyone else, such as your medical aid or employer? '),
        ),
        migrations.AlterField(
            model_name='hospitaladmission',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='householdcomposition',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='hypertensioncardiovascular',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='immigrationstatus',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='labourmarketwages',
            name='govt_grant',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='Do you receive any government grant for yourself or on behalf of someone else? '),
        ),
        migrations.AlterField(
            model_name='labourmarketwages',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='labourmarketwages',
            name='weeks_out',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 12 months, have you spent more than 2 weeks away? '),
        ),
        migrations.AlterField(
            model_name='medicaldiagnoses',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='nonpregnancy',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='outpatientcare',
            name='cost_cover',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, null=True, verbose_name='For this most recent outpatient medical care visit, were any of these costs by covered by anyone else, such as your medical aid or employer? '),
        ),
        migrations.AlterField(
            model_name='outpatientcare',
            name='dept_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, did you seek care at a Hospital Outpatient Department, including Govt, private and church/mission hospitals? Not including any visits for which you were hospitalized. '),
        ),
        migrations.AlterField(
            model_name='outpatientcare',
            name='govt_health_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, did you seek care at a Government Primary Health Clinic/Post? Not including any visits for which you were hospitalized. '),
        ),
        migrations.AlterField(
            model_name='outpatientcare',
            name='prvt_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, did you seek care from a Private Doctor? '),
        ),
        migrations.AlterField(
            model_name='outpatientcare',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='outpatientcare',
            name='trad_care',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, did you seek care from a Traditional or Faith Healer? '),
        ),
        migrations.AlterField(
            model_name='participation',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='pimacd4',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='pimavl',
            name='easy_of_use',
            field=models.CharField(blank=True, choices=[('easy', 'Easy'), ('Very easy', 'Very Easy'), ('Fairly easy', 'Fairly easy'), ('Difficult', 'Difficult'), ('Very difficult', 'Very difficult')], max_length=25, null=True, verbose_name='Ease of use by field operator?'),
        ),
        migrations.AlterField(
            model_name='pimavl',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='pimavl',
            name='stability',
            field=models.TextField(blank=True, help_text='Comment', max_length=250, null=True, verbose_name='Stability'),
        ),
        migrations.AlterField(
            model_name='positiveparticipant',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='pregnancy',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='qualityoflife',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='recentpartner',
            name='first_exchange',
            field=models.CharField(choices=[('less or equal to 18 years old', 'less or equal to 18 years old'), ('19-29', '19-29 years old'), ('30-39', '30-39 years old'), ('40-49', '40-49 years old'), ('50-59', '50-59 years old'), ('60 or older', '60 year or older'), ('not_sure', 'Not sure'), ('DWTA', "Don't want to answer")], help_text='Note: If participant does not want to answer, leave blank.', max_length=40, null=True, verbose_name='To the best of your knowledge, how old is this person?'),
        ),
        migrations.AlterField(
            model_name='recentpartner',
            name='first_relationship',
            field=models.CharField(choices=[('Long-term partner', 'Long-term partner (>2 years) or spouse'), ('2 years or spouse', '2 years or spouse'), ('Boyfriend/Girlfriend', 'Boyfriend/Girlfriend'), ('Casual (known) partner', 'Casual (known) partner'), ('One time partner (previously unknown)', 'One time partner (previously unknown)'), ('Commercial sex worker', 'Commercial sex worker'), ('OTHER', 'Other, specify:'), ('DWTA', "Don't want to answer")], max_length=40, verbose_name='What type of relationship do you have with this person?'),
        ),
        migrations.AlterField(
            model_name='recentpartner',
            name='partner_hiv_test',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_sure', 'Not Sure'), ('DWTA', "Don't want to answer")], max_length=25, verbose_name='Has your partner been tested for HIV in last 12 months'),
        ),
        migrations.AlterField(
            model_name='recentpartner',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='reproductivehealth',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='residencymobility',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='resourceutilization',
            name='medical_cover',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, null=True, verbose_name='Were any of these costs for medicines or special foods covered by anyone else, such as your medical aid or employer? '),
        ),
        migrations.AlterField(
            model_name='resourceutilization',
            name='out_patient',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('REFUSED', 'Refused to answer')], max_length=17, verbose_name='In the last 3 months, have you sought outpatient medical care for yourself? Not including any visits for which you were hospitalized. '),
        ),
        migrations.AlterField(
            model_name='resourceutilization',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='respondent',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='secondpartner',
            name='first_exchange',
            field=models.CharField(choices=[('less or equal to 18 years old', 'less or equal to 18 years old'), ('19-29', '19-29 years old'), ('30-39', '30-39 years old'), ('40-49', '40-49 years old'), ('50-59', '50-59 years old'), ('60 or older', '60 year or older'), ('not_sure', 'Not sure'), ('DWTA', "Don't want to answer")], help_text='Note: If participant does not want to answer, leave blank.', max_length=40, null=True, verbose_name='To the best of your knowledge, how old is this person?'),
        ),
        migrations.AlterField(
            model_name='secondpartner',
            name='first_relationship',
            field=models.CharField(choices=[('Long-term partner', 'Long-term partner (>2 years) or spouse'), ('2 years or spouse', '2 years or spouse'), ('Boyfriend/Girlfriend', 'Boyfriend/Girlfriend'), ('Casual (known) partner', 'Casual (known) partner'), ('One time partner (previously unknown)', 'One time partner (previously unknown)'), ('Commercial sex worker', 'Commercial sex worker'), ('OTHER', 'Other, specify:'), ('DWTA', "Don't want to answer")], max_length=40, verbose_name='What type of relationship do you have with this person?'),
        ),
        migrations.AlterField(
            model_name='secondpartner',
            name='partner_hiv_test',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_sure', 'Not Sure'), ('DWTA', "Don't want to answer")], max_length=25, verbose_name='Has your partner been tested for HIV in last 12 months'),
        ),
        migrations.AlterField(
            model_name='secondpartner',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='sexualbehaviour',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='stigma',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='stigmaopinion',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='subjectconsent',
            name='is_incarcerated',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="( if 'Yes' STOP patient cannot be consented )", max_length=3, null=True, validators=[edc_consent.validators.eligible_if_no], verbose_name='Is the participant under involuntary incarceration?'),
        ),
        migrations.AlterField(
            model_name='subjectconsent',
            name='is_minor',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], editable=False, help_text='Subject is a minor if aged 16-17. A guardian must be present for consent. HIV status may NOT be revealed in the household.', max_length=10, null=True, verbose_name='Is subject a minor?'),
        ),
        migrations.AlterField(
            model_name='subjectconsent',
            name='language',
            field=models.CharField(choices=[('tn', 'Setswana'), ('en', 'English'), ('kck', 'Ikalanga'), ('hbs', 'Hambukushu')], help_text='The language used for the edc_consent process will also be used during data collection.', max_length=25, verbose_name='Language of consent'),
        ),
        migrations.AlterField(
            model_name='subjectconsent',
            name='subject_identifier_as_pk',
            field=models.CharField(default=edc_base.utils.get_uuid, editable=False, max_length=32, verbose_name='Subject Identifier as pk'),
        ),
        migrations.AlterField(
            model_name='subjectconsent',
            name='version',
            field=models.CharField(editable=False, help_text="See 'Consent Type' for consent versions by period.", max_length=10, verbose_name='Consent version'),
        ),
        migrations.AlterField(
            model_name='subjectreferral',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='substanceuse',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='tbsymptoms',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='thirdpartner',
            name='first_exchange',
            field=models.CharField(choices=[('less or equal to 18 years old', 'less or equal to 18 years old'), ('19-29', '19-29 years old'), ('30-39', '30-39 years old'), ('40-49', '40-49 years old'), ('50-59', '50-59 years old'), ('60 or older', '60 year or older'), ('not_sure', 'Not sure'), ('DWTA', "Don't want to answer")], help_text='Note: If participant does not want to answer, leave blank.', max_length=40, null=True, verbose_name='To the best of your knowledge, how old is this person?'),
        ),
        migrations.AlterField(
            model_name='thirdpartner',
            name='first_relationship',
            field=models.CharField(choices=[('Long-term partner', 'Long-term partner (>2 years) or spouse'), ('2 years or spouse', '2 years or spouse'), ('Boyfriend/Girlfriend', 'Boyfriend/Girlfriend'), ('Casual (known) partner', 'Casual (known) partner'), ('One time partner (previously unknown)', 'One time partner (previously unknown)'), ('Commercial sex worker', 'Commercial sex worker'), ('OTHER', 'Other, specify:'), ('DWTA', "Don't want to answer")], max_length=40, verbose_name='What type of relationship do you have with this person?'),
        ),
        migrations.AlterField(
            model_name='thirdpartner',
            name='partner_hiv_test',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_sure', 'Not Sure'), ('DWTA', "Don't want to answer")], max_length=25, verbose_name='Has your partner been tested for HIV in last 12 months'),
        ),
        migrations.AlterField(
            model_name='thirdpartner',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='tuberculosis',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='uncircumcised',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
        migrations.AlterField(
            model_name='viralloadresult',
            name='report_datetime',
            field=models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model_validators.date.datetime_not_future, edc_protocol.validators.datetime_not_before_study_start], verbose_name='Report Date'),
        ),
    ]
